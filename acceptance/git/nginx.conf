# Enhanced nginx configuration for git-http-backend with improved reliability
# Based on https://github.com/ynohat/git-http-backend/blob/master/nginx.conf
# with additional timeout and connection settings for test environments

worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid /run/nginx.pid;
user root;

events {
    worker_connections  2048;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Buffer settings to handle large git operations
    client_body_buffer_size 128k;
    client_max_body_size 0;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeout settings to prevent EOF errors
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # FastCGI timeout settings
    fastcgi_connect_timeout 60s;
    fastcgi_send_timeout 60s;
    fastcgi_read_timeout 60s;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    server {
        listen 443 ssl http2;

        ssl_certificate /etc/tls/server.cer;
        ssl_certificate_key /etc/tls/server.key;
        ssl_session_tickets off;
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        # SSL session cache for better performance
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        root /www/empty/;
        index index.html;

        server_name $hostname;
        access_log /var/log/nginx/access.log;

        location ~ /git(/.*) {
            # Set chunks to unlimited, as the bodies can be huge
            client_max_body_size 0;
            
            # Connection settings to prevent EOF errors
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            fastcgi_param SCRIPT_FILENAME /usr/libexec/git-core/git-http-backend;
            include fastcgi_params;
            fastcgi_param GIT_HTTP_EXPORT_ALL "";
            fastcgi_param GIT_PROJECT_ROOT /git;
            fastcgi_param PATH_INFO $1;

            # Forward REMOTE_USER as we want to know when we are authenticated
            fastcgi_param REMOTE_USER $remote_user;
            fastcgi_pass unix:/run/fcgi.sock;
            
            # Additional FastCGI parameters for stability
            fastcgi_param HTTP_HOST $host;
            fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
            fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        }
    }
}
