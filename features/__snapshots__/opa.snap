
[OPA sub-command is available:stdout - 1]
An open source project to policy-enable your service.

Usage:
  ec opa [command]

Available Commands:
  bench        Benchmark a Rego query
  build        Build an OPA bundle
  capabilities Print the capabilities of OPA
  check        Check Rego source files
  deps         Analyze Rego query dependencies
  eval         Evaluate a Rego query
  exec         Execute against input files
  fmt          Format Rego source files
  inspect      Inspect OPA bundle(s) or Rego files.
  parse        Parse Rego source file
  run          Start OPA in interactive or server mode
  sign         Generate an OPA bundle signature
  test         Execute Rego test cases
  version      Print the version of OPA

Flags:
  -h, --help   help for opa

Global Flags:
      --debug                     same as verbose but also show function names and line numbers
      --kubeconfig string         path to the Kubernetes config file to use
      --logfile string            file to write the logging output. If not specified logging output will be written to stderr
      --quiet                     less verbose output
      --retry-duration duration   base duration for exponential backoff calculation (default 1s)
      --retry-factor float        exponential backoff multiplier (default 2)
      --retry-jitter float        randomness factor for backoff calculation (0.0-1.0) (default 0.1)
      --retry-max-retry int       maximum number of retry attempts (default 3)
      --retry-max-wait duration   maximum wait time between retries (default 3s)
      --timeout duration          max overall execution duration (default 5m0s)
      --trace string[="log"]      enable trace logging, set one or more comma separated values: none,all,perf,cpu,mem,opa,log (default "none")
      --verbose                   more verbose output

Use "ec opa [command] --help" for more information about a command.

---

[OPA sub-command is available:stderr - 1]

---
