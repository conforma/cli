
[TestConftestEvaluatorEvaluate - 1]
[]evaluator.Outcome{
    {
        FileName:  "$TMPDIR/inputs/data.json",
        Namespace: "a",
        Successes: {
            {
                Message:  "Pass",
                Metadata: {
                    "code":        "a.success",
                    "description": "Success description.",
                    "title":       "Success",
                },
                Outputs: nil,
            },
        },
        Skipped: {
        },
        Warnings: {
            {
                Message:  "Warning!",
                Metadata: {
                    "code":        "a.warning",
                    "description": "Warning description.",
                    "title":       "Warning",
                },
                Outputs: nil,
            },
        },
        Failures: {
            {
                Message:  "Failure!",
                Metadata: {
                    "code":        "a.failure",
                    "description": "Failure description. To exclude this rule add \"a.failure\" to the `exclude` section of the policy configuration.",
                    "title":       "Failure",
                },
                Outputs: nil,
            },
        },
        Exceptions: {
        },
    },
    {
        FileName:  "$TMPDIR/inputs/data.json",
        Namespace: "b",
        Successes: {
            {
                Message:  "Pass",
                Metadata: {
                    "code": "b.success",
                },
                Outputs: nil,
            },
        },
        Skipped: {
        },
        Warnings: {
            {
                Message:  "Warning!",
                Metadata: {
                    "code": "b.warning",
                },
                Outputs: nil,
            },
        },
        Failures: {
            {
                Message:  "Failure!",
                Metadata: {
                    "code": "b.failure",
                },
                Outputs: nil,
            },
        },
        Exceptions: {
        },
    },
}
---
